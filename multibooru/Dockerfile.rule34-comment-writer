FROM --platform=$BUILDPLATFORM rust:bookworm AS builder
ARG TARGETARCH


# RUN case "$TARGETARCH" in \
#       "arm64") echo armv7-unknown-linux-musleabihf > /rust_target.txt ;; \
#       "amd64") echo x86_64-unknown-linux-musl > /rust_target.txt ;; \
#       *) echo "unknown target: $TARGETARCH" ; exit 1 ;; \
#     esac
RUN case "$TARGETARCH" in \
      "arm64") echo aarch64-unknown-linux-gnu > /rust_target.txt ;; \
      "amd64") echo x86_64-unknown-linux-gnu > /rust_target.txt ;; \
      *) echo "unknown target: $TARGETARCH" ; exit 1 ;; \
    esac


RUN rustup target add $(cat /rust_target.txt)

RUN cargo install cargo-strip

RUN apt update && apt install -y gcc gcc-aarch64-linux-gnu && rm -rf /var/lib/apt/lists/*

RUN case "$TARGETARCH" in \
      "arm64") echo aarch64-linux-gnu-gcc > /rust_linker.txt ;; \
      "amd64") echo gcc > /rust_linker.txt ;; \
      *) echo "unknown target: $TARGETARCH" ; exit 1 ;; \
    esac

COPY . /app

WORKDIR /app/acquisition/rule34/comment
RUN --mount=type=cache,target=/usr/local/cargo/git,id=${TARGETARCH} \
    --mount=type=cache,target=/usr/local/cargo/registry,id=${TARGETARCH} \
    --mount=type=cache,target=/app/acquisition/rule34/comment/target,id=${TARGETARCH} \
    echo "Current compilation cache size:" && \
    du -csh /app/acquisition/rule34/comment/target /usr/local/cargo/registry /usr/local/cargo/git && \
    export RUSTFLAGS="$RUSTFLAGS -C linker=$(cat /rust_linker.txt)" && \
    cargo build --release --target $(cat /rust_target.txt) && \
    cargo strip --target $(cat /rust_target.txt) && \
    # Copy executable out of the cache so it is available in the final image.
    cp target/$(cat /rust_target.txt)/release/acquisition-rule34-comment /exec

FROM --platform=$TARGETPLATFORM debian:bookworm
WORKDIR /app
COPY --from=builder /exec /app/exec
ENTRYPOINT ["/app/exec"]